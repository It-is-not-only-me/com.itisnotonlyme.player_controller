//------------------------------------------------------------------------------
// <auto-generated>
//     This code was auto-generated by com.unity.inputsystem:InputActionCodeGenerator
//     version 1.3.0
//     from Assets/com.itisnotonlyme.player_controller/Editor/Input/Player.inputactions
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.Collections;
using System.Collections.Generic;
using UnityEngine.InputSystem;
using UnityEngine.InputSystem.Utilities;

public partial class @Player : IInputActionCollection2, IDisposable
{
    public InputActionAsset asset { get; }
    public @Player()
    {
        asset = InputActionAsset.FromJson(@"{
    ""name"": ""Player"",
    ""maps"": [
        {
            ""name"": ""Jugador"",
            ""id"": ""52cb1cc0-b893-4d4d-90e5-d97f147a1e32"",
            ""actions"": [
                {
                    ""name"": ""Saltar"",
                    ""type"": ""Button"",
                    ""id"": ""2af7c5e6-c0ee-4cb1-abd9-d5d02be722e2"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Agacharse"",
                    ""type"": ""Button"",
                    ""id"": ""897a7e87-4c7c-4054-bf81-ce8ffed90232"",
                    ""expectedControlType"": ""Button"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": false
                },
                {
                    ""name"": ""Direcciones"",
                    ""type"": ""Value"",
                    ""id"": ""9c0b9914-c865-424c-85f9-094d44e8e85b"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                },
                {
                    ""name"": ""Rotar"",
                    ""type"": ""Value"",
                    ""id"": ""1cb007b9-5020-4124-bce5-0fad154d73aa"",
                    ""expectedControlType"": ""Vector2"",
                    ""processors"": """",
                    ""interactions"": """",
                    ""initialStateCheck"": true
                }
            ],
            ""bindings"": [
                {
                    ""name"": """",
                    ""id"": ""a5b02d67-6211-41e8-9a1b-c4541cd8b0ca"",
                    ""path"": ""<Keyboard>/space"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Saltar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": """",
                    ""id"": ""9dcda898-d662-4e4c-8182-7e39022496c0"",
                    ""path"": ""<Keyboard>/ctrl"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Agacharse"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""AWSD"",
                    ""id"": ""17b4a361-f4f4-4814-928e-300797214d25"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direcciones"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""1916a2ca-2fc5-41da-8823-29e102d05b7e"",
                    ""path"": ""<Keyboard>/w"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direcciones"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""26a1bc72-7fee-4cec-8c2f-fba486e2c622"",
                    ""path"": ""<Keyboard>/s"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direcciones"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""1dc75862-c4f7-4fb0-92e3-ae57b1a4ff9d"",
                    ""path"": ""<Keyboard>/a"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direcciones"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""12359d4e-07af-448b-a2ca-c70dbed458c4"",
                    ""path"": ""<Keyboard>/d"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direcciones"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""Flechas"",
                    ""id"": ""f42c56b1-de8b-47fe-b8bd-db1698c303b9"",
                    ""path"": ""2DVector"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direcciones"",
                    ""isComposite"": true,
                    ""isPartOfComposite"": false
                },
                {
                    ""name"": ""up"",
                    ""id"": ""f732bb1d-3b53-47ee-8c76-29c6b750b694"",
                    ""path"": ""<Keyboard>/upArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direcciones"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""down"",
                    ""id"": ""8bb81eff-4eab-4bc1-b329-c43deeead35a"",
                    ""path"": ""<Keyboard>/downArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direcciones"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""left"",
                    ""id"": ""94aa2244-1d1b-4be6-a191-f8edb193dc3a"",
                    ""path"": ""<Keyboard>/leftArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direcciones"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": ""right"",
                    ""id"": ""dde273c1-36f2-4375-ad10-ad42dc21db85"",
                    ""path"": ""<Keyboard>/rightArrow"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Direcciones"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": true
                },
                {
                    ""name"": """",
                    ""id"": ""d74fc90b-a758-48c3-92e2-5c79523f8fb9"",
                    ""path"": ""<Mouse>/delta"",
                    ""interactions"": """",
                    ""processors"": """",
                    ""groups"": """",
                    ""action"": ""Rotar"",
                    ""isComposite"": false,
                    ""isPartOfComposite"": false
                }
            ]
        }
    ],
    ""controlSchemes"": []
}");
        // Jugador
        m_Jugador = asset.FindActionMap("Jugador", throwIfNotFound: true);
        m_Jugador_Saltar = m_Jugador.FindAction("Saltar", throwIfNotFound: true);
        m_Jugador_Agacharse = m_Jugador.FindAction("Agacharse", throwIfNotFound: true);
        m_Jugador_Direcciones = m_Jugador.FindAction("Direcciones", throwIfNotFound: true);
        m_Jugador_Rotar = m_Jugador.FindAction("Rotar", throwIfNotFound: true);
    }

    public void Dispose()
    {
        UnityEngine.Object.Destroy(asset);
    }

    public InputBinding? bindingMask
    {
        get => asset.bindingMask;
        set => asset.bindingMask = value;
    }

    public ReadOnlyArray<InputDevice>? devices
    {
        get => asset.devices;
        set => asset.devices = value;
    }

    public ReadOnlyArray<InputControlScheme> controlSchemes => asset.controlSchemes;

    public bool Contains(InputAction action)
    {
        return asset.Contains(action);
    }

    public IEnumerator<InputAction> GetEnumerator()
    {
        return asset.GetEnumerator();
    }

    IEnumerator IEnumerable.GetEnumerator()
    {
        return GetEnumerator();
    }

    public void Enable()
    {
        asset.Enable();
    }

    public void Disable()
    {
        asset.Disable();
    }
    public IEnumerable<InputBinding> bindings => asset.bindings;

    public InputAction FindAction(string actionNameOrId, bool throwIfNotFound = false)
    {
        return asset.FindAction(actionNameOrId, throwIfNotFound);
    }
    public int FindBinding(InputBinding bindingMask, out InputAction action)
    {
        return asset.FindBinding(bindingMask, out action);
    }

    // Jugador
    private readonly InputActionMap m_Jugador;
    private IJugadorActions m_JugadorActionsCallbackInterface;
    private readonly InputAction m_Jugador_Saltar;
    private readonly InputAction m_Jugador_Agacharse;
    private readonly InputAction m_Jugador_Direcciones;
    private readonly InputAction m_Jugador_Rotar;
    public struct JugadorActions
    {
        private @Player m_Wrapper;
        public JugadorActions(@Player wrapper) { m_Wrapper = wrapper; }
        public InputAction @Saltar => m_Wrapper.m_Jugador_Saltar;
        public InputAction @Agacharse => m_Wrapper.m_Jugador_Agacharse;
        public InputAction @Direcciones => m_Wrapper.m_Jugador_Direcciones;
        public InputAction @Rotar => m_Wrapper.m_Jugador_Rotar;
        public InputActionMap Get() { return m_Wrapper.m_Jugador; }
        public void Enable() { Get().Enable(); }
        public void Disable() { Get().Disable(); }
        public bool enabled => Get().enabled;
        public static implicit operator InputActionMap(JugadorActions set) { return set.Get(); }
        public void SetCallbacks(IJugadorActions instance)
        {
            if (m_Wrapper.m_JugadorActionsCallbackInterface != null)
            {
                @Saltar.started -= m_Wrapper.m_JugadorActionsCallbackInterface.OnSaltar;
                @Saltar.performed -= m_Wrapper.m_JugadorActionsCallbackInterface.OnSaltar;
                @Saltar.canceled -= m_Wrapper.m_JugadorActionsCallbackInterface.OnSaltar;
                @Agacharse.started -= m_Wrapper.m_JugadorActionsCallbackInterface.OnAgacharse;
                @Agacharse.performed -= m_Wrapper.m_JugadorActionsCallbackInterface.OnAgacharse;
                @Agacharse.canceled -= m_Wrapper.m_JugadorActionsCallbackInterface.OnAgacharse;
                @Direcciones.started -= m_Wrapper.m_JugadorActionsCallbackInterface.OnDirecciones;
                @Direcciones.performed -= m_Wrapper.m_JugadorActionsCallbackInterface.OnDirecciones;
                @Direcciones.canceled -= m_Wrapper.m_JugadorActionsCallbackInterface.OnDirecciones;
                @Rotar.started -= m_Wrapper.m_JugadorActionsCallbackInterface.OnRotar;
                @Rotar.performed -= m_Wrapper.m_JugadorActionsCallbackInterface.OnRotar;
                @Rotar.canceled -= m_Wrapper.m_JugadorActionsCallbackInterface.OnRotar;
            }
            m_Wrapper.m_JugadorActionsCallbackInterface = instance;
            if (instance != null)
            {
                @Saltar.started += instance.OnSaltar;
                @Saltar.performed += instance.OnSaltar;
                @Saltar.canceled += instance.OnSaltar;
                @Agacharse.started += instance.OnAgacharse;
                @Agacharse.performed += instance.OnAgacharse;
                @Agacharse.canceled += instance.OnAgacharse;
                @Direcciones.started += instance.OnDirecciones;
                @Direcciones.performed += instance.OnDirecciones;
                @Direcciones.canceled += instance.OnDirecciones;
                @Rotar.started += instance.OnRotar;
                @Rotar.performed += instance.OnRotar;
                @Rotar.canceled += instance.OnRotar;
            }
        }
    }
    public JugadorActions @Jugador => new JugadorActions(this);
    public interface IJugadorActions
    {
        void OnSaltar(InputAction.CallbackContext context);
        void OnAgacharse(InputAction.CallbackContext context);
        void OnDirecciones(InputAction.CallbackContext context);
        void OnRotar(InputAction.CallbackContext context);
    }
}
